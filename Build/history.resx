<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HN2eyFZSUhKO9kK2g6FH0HFwQkND76O9kK1g6DFkcOSSFVRQFcXFxZ1D+yBbwdCj6DQ4/fr1y0F7IFvB
        0OPI4KxcuXISKqpKBg0a9He0frIVDD2SDI68Q4XKqor4+PiTaO1kKxh6LNUHJzIy8gpaN9kKhh5v+fLl
        k1FpnVReXl7b39+/Aq2XbAVDek21wdm/f/8AtE6yHQzpW8uWLZuCCuyEyZMnL0drJNvBkN6wdOnS36IS
        26mystI3PDy8BK2PbAdD+g6nB0cuMkXrIkfAkIC0tLRUVGiryd2bERERV9GayBEwJANODM7cuXP/iNZC
        joEhvcWSJUumonJbITc3t7c8BQ6tgxwDQ/oeixcvnoZKbqbi4uIoXtWsJBjSO5gzZ86fUNnNcOHChR+1
        aNHiMnpdchwM6R0lJiZuqaio8EfFr6mcnJx+ISEhD9HrkRJgSNUgF1Hm5+e3RwNQHWVlZQGzZs2azd9h
        lAdDqia50DMpKWmTnBqDBuJtqqqqfOR+nkaNGt1EX5uUA0OqIR8fn6qePXv+S94okF/k0ZCI0tLSoKys
        rGFynln9+vX/h74WKQuGZBI/P79nTZs2/aZDhw5fdO7c+fOoqKji4ODgR+jPkjZgSETGYEhExmBIRMZg
        SETGYEhExmBIRMZgSETGYEhExmBIRMZgSETGYEhExmBIRMZgSETGYEhExmBIRMZgSETGYEhExmBIRMZg
        SETQB6/+D5dBnWNL+IpOAAAAAElFTkSuQmCC
</value>
  </data>
</root>